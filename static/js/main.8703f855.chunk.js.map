{"version":3,"sources":["reportWebVitals.js","Main.js","Login.js","Registration.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Main","useState","localStorage","getItem","user","entrys","setEntrys","name","start","stop","hours","minutes","seconds","duration","interrupted","interruptedIndex","newEntry","setNewEntry","stopIndex","setStopIndex","stopButtonValue","setStopButtonValue","pauseButtonValue","setPauseButtonValue","interruptButtonValue","setInterruptButtonValue","stopWatchValue","setStopWatchValue","setSeconds","setMinutes","setHours","formOfAdress","setFormOfAdress","stopTime","getCurrentTime","String","padStart","storeEntry","interruptTime","setItem","pauseTime","today","Date","getHours","getMinutes","firebase","database","ref","set","Logout","className","to","style","color","border","Stopwatch","onChange","onCallback","console","log","autoStart","render","formatted","Settings","Button","background","onClick","disabled","Statistics","BetterTable","scope","length","map","entry","index","parseInt","startTime","newArray","filter","idx","deleteEntry","Like","useEffect","on","snap","val","getWelcomeMessage","id","InputGroup","FormControl","value","e","old","target","push","Login","username","setUsername","password","setPassword","pwFromDatabase","setPwFromDatabase","errorMessage","setErrorMessage","history","useHistory","onLogin","placeholder","type","Registration","firstPw","setFirstPw","dropdownValue","setDropdownValue","validate","Dropdown","Toggle","variant","Menu","adress","Item","App","path","component","basename","process","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8703f855.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './App.css';\r\nimport firebase from 'firebase';\r\nimport React, {useEffect, useState} from \"react\";\r\nimport ReactStopwatch from 'react-stopwatch';\r\nimport {Button, FormControl, InputGroup, Spinner} from \"react-bootstrap\";\r\nimport {DoorClosedFill, DoorOpen, DoorOpenFill, Square} from \"react-bootstrap-icons\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport default function Main() {\r\n    const [user, setUser] = useState(localStorage.getItem('username'))\r\n    let [entrys, setEntrys] = useState([])\r\n    const [newEntry, setNewEntry] = useState({\r\n        name: '',\r\n        start: '',\r\n        stop: '',\r\n        hours: '',\r\n        minutes: '',\r\n        seconds: '',\r\n        duration: '',\r\n        interrupted: false,\r\n        interruptedIndex: 0\r\n    })\r\n    const [stopIndex, setStopIndex] = useState(0)\r\n    const [stopButtonValue, setStopButtonValue] = useState(true);\r\n    const [pauseButtonValue, setPauseButtonValue] = useState(true);\r\n    const [interruptButtonValue, setInterruptButtonValue] = useState(true);\r\n    const [stopWatchValue, setStopWatchValue] = useState(false);\r\n    const [seconds, setSeconds] = useState(0)\r\n    const [minutes, setMinutes] = useState(0)\r\n    const [hours, setHours] = useState(0)\r\n    const [formOfAdress, setFormOfAdress] = useState('')\r\n\r\n\r\n    useEffect(() => {\r\n        loadContent()\r\n        findFormOfAdress()\r\n    }, [])\r\n\r\n    function saveEntry() {\r\n\r\n        entrys.push(newEntry)\r\n        storeEntry(user)\r\n    }\r\n\r\n    function startTime(index) {\r\n        if (entrys[index].interrupted === true) {\r\n            let interruptedIndex = parseInt(localStorage.getItem(user + \": index -> \"))\r\n            setMinutes(entrys[interruptedIndex].minutes)\r\n            setSeconds(entrys[interruptedIndex].seconds)\r\n            setHours(entrys[interruptedIndex].hours)\r\n        } else {\r\n\r\n            entrys[index].start = getCurrentTime()\r\n\r\n            setMinutes(0)\r\n            setSeconds(0)\r\n            setHours(0)\r\n            entrys[index].duration = String(hours).padStart(2, \"0\") + ':' + String(minutes).padStart(2, \"0\") + ':' + String(seconds).padStart(2, \"0\")\r\n            storeEntry(user)\r\n\r\n        }\r\n        setStopIndex(index)\r\n        setStopWatchValue(true)\r\n        setStopButtonValue(false)\r\n        setPauseButtonValue(false)\r\n        setInterruptButtonValue(false)\r\n        storeEntry(user)\r\n    }\r\n\r\n    function stopTime() {\r\n        resetValues()\r\n        entrys[stopIndex].stop = getCurrentTime()\r\n        entrys[stopIndex].duration = String(hours).padStart(2, \"0\") + ':' + String(minutes).padStart(2, \"0\") + ':' + String(seconds).padStart(2, \"0\")\r\n        entrys[stopIndex].hours = hours\r\n        entrys[stopIndex].minutes = minutes\r\n        entrys[stopIndex].seconds = seconds\r\n\r\n        storeEntry(user)\r\n    }\r\n\r\n    function resetValues() {\r\n        setSeconds(0)\r\n        setMinutes(0)\r\n        setHours(0)\r\n        setStopWatchValue(false)\r\n        setStopButtonValue(true)\r\n        setPauseButtonValue(true)\r\n        setInterruptButtonValue(true)\r\n    }\r\n\r\n    function interruptTime() {\r\n        entrys[stopIndex].interrupted = true\r\n        localStorage.setItem(user + \": index -> \", String(stopIndex))\r\n\r\n        stopTime()\r\n    }\r\n\r\n    function pauseTime() {\r\n        if (stopWatchValue === false) {\r\n            setStopWatchValue(true)\r\n        } else {\r\n            setStopWatchValue(false)\r\n        }\r\n\r\n    }\r\n\r\n    function findFormOfAdress() {\r\n        // on() method\r\n        firebase.database().ref('usernames/' + user + '/security').on('value', (snap) => {\r\n            if (snap.val()) {\r\n                console.log(\"snap.val()\", snap.val())\r\n                setFormOfAdress(snap.val().formOfAdress)\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    function getCurrentTime() {\r\n        let today = new Date()\r\n        return String(today.getHours()).padStart(2, \"0\") + ':' + String(today.getMinutes()).padStart(2, \"0\")\r\n    }\r\n\r\n    function getWelcomeMessage() {\r\n        let hours = new Date().getHours()\r\n\r\n        if (hours >= 0 && hours < 12) {\r\n            return \"Good Morning, \"\r\n        } else if (hours >= 12 && hours < 18) {\r\n            return \"Good Afternoon, \"\r\n        } else if (hours >= 18 && hours < 0) {\r\n            return \"Good Evening, \"\r\n        }\r\n    }\r\n\r\n    function storeEntry(user) {\r\n        if (user != null) {\r\n            firebase.database().ref('usernames/' + user + '/entries').set(entrys);\r\n        }\r\n    }\r\n\r\n    function loadContent() {\r\n        console.log(\"loading..\")\r\n        let newArray = []\r\n        setEntrys(newArray)\r\n        readEntrys()\r\n    }\r\n\r\n    function readEntrys() {\r\n        // on() method\r\n        firebase.database().ref('usernames/' + user + '/entries').on('value', (snap) => {\r\n            if (snap.val()) {\r\n                console.log(\"snap.val()\", snap.val())\r\n                setEntrys(snap.val())\r\n            }\r\n        });\r\n    }\r\n\r\n    function deleteEntry(index) {\r\n        let newArray = entrys.filter((entry, idx) => idx !== index);\r\n        setEntrys(newArray);\r\n\r\n        if (user != null) {\r\n            firebase.database().ref('usernames/' + user + '/entries').set(newArray);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    function deleteAll() {\r\n        let newArray = []\r\n        setEntrys(newArray)\r\n\r\n        if (user != null) {\r\n            firebase.database().ref('usernames/' + user + '/entries').set(newArray);\r\n        }\r\n    }\r\n\r\n    function Logout() {\r\n        return (\r\n            <div>\r\n                <h4 className=\"logout\">S E M E R U<NavLink className={\"logoutButton\"}\r\n                                                           to=\"/login\"><DoorClosedFill\r\n                    style={{color: \"#526b4d\", border: \"#526b4d\"}}/></NavLink></h4>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    function Stopwatch() {\r\n        return (\r\n            <ReactStopwatch\r\n                seconds={seconds}\r\n                minutes={minutes}\r\n                hours={hours}\r\n                onChange={({hours, minutes, seconds}) => {\r\n                    setSeconds(seconds)\r\n                    setMinutes(minutes)\r\n                    setHours(hours)\r\n                }\r\n                }\r\n                onCallback={() => console.log('Finish')}\r\n                autoStart={stopWatchValue}\r\n                render={({formatted}) => {\r\n                    return (\r\n                        <div>\r\n                            <p>\r\n                                {formatted}\r\n                            </p>\r\n                        </div>\r\n                    );\r\n                }}\r\n            />\r\n        )\r\n    }\r\n\r\n    function Settings() {\r\n        return (\r\n            <div className=\"component\">\r\n                <br/>\r\n                <h4 className={\"setting\"}>S E T T I N G S</h4>\r\n                <br/>\r\n                <h3 className={\"stopwatch\"}><Stopwatch/></h3>\r\n                <br/>\r\n                <Button style={{background: \"#526b4d\", border: \"#526b4d\"}} onClick={pauseTime}\r\n                        disabled={pauseButtonValue}>Pause/Resume</Button>&emsp;\r\n                <Button style={{background: \"#526b4d\", border: \"#526b4d\"}} onClick={stopTime}\r\n                        disabled={stopButtonValue}>Stop</Button>&emsp;\r\n                <Button style={{background: \"#526b4d\", border: \"#526b4d\"}} onClick={interruptTime}\r\n                        disabled={interruptButtonValue}>Interrupt</Button>\r\n                <br/>\r\n                <br/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    function Statistics() {\r\n        return (\r\n            <div className=\"component\">\r\n                <br/>\r\n                <h4 className={\"setting\"}>S T A T I S T I C S</h4>\r\n                <br/>\r\n                <h3 className={\"stopwatch\"}><Stopwatch/></h3>\r\n                <br/>\r\n                <Button style={{background: \"#526b4d\", border: \"#526b4d\"}} onClick={pauseTime}\r\n                        disabled={pauseButtonValue}>Pause/Resume</Button>&emsp;\r\n                <Button style={{background: \"#526b4d\", border: \"#526b4d\"}} onClick={stopTime}\r\n                        disabled={stopButtonValue}>Stop</Button>&emsp;\r\n                <Button style={{background: \"#526b4d\", border: \"#526b4d\"}} onClick={interruptTime}\r\n                        disabled={interruptButtonValue}>Interrupt</Button>\r\n                <br/>\r\n                <br/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    function BetterTable() {\r\n        return (\r\n            <div className=\"tableFixHead\">\r\n                <table>\r\n                    <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">Name</th>\r\n                        <th scope=\"col\">Start Time</th>\r\n                        <th scope=\"col\">End Time</th>\r\n                        <th scope=\"col\">Duration</th>\r\n                        <th scope=\"col\">Start / Restart</th>\r\n                        <th scope=\"col\">Delete</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {entrys.length === 0 ? <div/> : entrys.map((entry, index) =>\r\n                        <tr key={index} className={\"tableBody\"}>\r\n                            <td>{entry.name}</td>\r\n                            <td>{entry.start}</td>\r\n                            <td>{entry.stop}</td>\r\n                            <td>{entry.duration}</td>\r\n                            <td>\r\n                                <Button style={{background: \"#526b4d\", border: \"#526b4d\"}}\r\n                                        onClick={() => startTime(index)}>Start</Button>\r\n                            </td>\r\n                            <td>\r\n                                <div onClick={() => deleteEntry(index)}>\r\n                                    <Like/>\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                    )}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            <Logout/>\r\n            <h1>{getWelcomeMessage()} {formOfAdress + user}\r\n                <br/>\r\n            </h1>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n\r\n\r\n            <h2>Tasks</h2>\r\n            <br/>\r\n            <h5>Task Name</h5>\r\n            <div className={\"d-flex\"} id={\"inputDiv\"}>\r\n                <InputGroup className=\"form-group w-25\">\r\n                    <FormControl\r\n                        aria-label=\"Default\"\r\n                        aria-describedby=\"inputGroup-sizing-default\"\r\n                        value={newEntry.name}\r\n                        onChange={e => setNewEntry(old => ({...old, name: e.target.value}))}\r\n                    />\r\n                </InputGroup>\r\n                <Button style={{background: \"#526b4d\", border: \"#526b4d\"}} onClick={saveEntry}>Add</Button>\r\n            </div>\r\n            <br/>\r\n            <br/>\r\n            <BetterTable/>\r\n            <br/>\r\n            <Button style={{background: \"#526b4d\", border: \"#526b4d\"}} onClick={deleteAll}>Delete All</Button>\r\n            <br/>\r\n            <br/>\r\n\r\n            <Settings/>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <Statistics/>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nfunction Like() {\r\n    return (<Square/>)\r\n}\r\n","import {FormControl, InputGroup, Button} from \"react-bootstrap\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport './App.css';\r\nimport firebase from \"firebase\";\r\nimport {NavLink, useHistory} from \"react-router-dom\";\r\nimport Main from \"./Main\";\r\n\r\n\r\nexport default function Login() {\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [pwFromDatabase, setPwFromDatabase] = useState('')\r\n    const [errorMessage, setErrorMessage] = useState(\"\")\r\n\r\n    const history = useHistory();\r\n\r\n    function onLogin() {\r\n        findPassword()\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(password !== '' || pwFromDatabase !== '') {\r\n            if (password === pwFromDatabase) {\r\n                console.log(\"login successful\")\r\n                localStorage.setItem('username', username);\r\n                history.push(\"/semeru\")\r\n                setErrorMessage(\"\")\r\n\r\n            } else {\r\n                setErrorMessage(\"Incorrect password\")\r\n\r\n            }\r\n        }\r\n    }, [pwFromDatabase])\r\n\r\n    function findPassword() {\r\n        // on() method\r\n        firebase.database().ref('usernames/' + username + '/security').on('value', (snap) => {\r\n            if (snap.val()) {\r\n                console.log(\"snap.val()\", snap.val())\r\n                setPwFromDatabase(snap.val().password)\r\n\r\n\r\n            } else {\r\n                setErrorMessage(\"Incorrect Username\")\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Semeru</h1><br/>\r\n            <h2>Login</h2>\r\n            <div className={\"d-flex\"} id={\"inputDiv\"}>\r\n                <InputGroup className={\"form-group w-25\"}>\r\n                    <FormControl\r\n                        aria-label=\"Default\"\r\n                        placeholder=\"Username\"\r\n                        value={username}\r\n                        onChange={e => setUsername(e.target.value)}>\r\n                    </FormControl>\r\n                </InputGroup>\r\n            </div>\r\n            <br/>\r\n            <div className={\"d-flex\"} id={\"inputDiv\"}>\r\n                <InputGroup className={\"form-group w-25\"}>\r\n                    <FormControl\r\n                        aria-label=\"Default\"\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        value={password}\r\n                        onChange={e => setPassword(e.target.value)}>\r\n                    </FormControl>\r\n                </InputGroup>\r\n            </div>\r\n            <h6 id={\"errormessage\"}>{errorMessage}</h6>\r\n            <br/>\r\n            <Button style={{background:\"#526b4d\", border:\"#526b4d\"}} onClick={() => onLogin()}>Login</Button>\r\n            <br/>\r\n            <h6>Don't have an account yet? <NavLink className={\"normalLink\"} to=\"/registration\">Register</NavLink></h6>\r\n        </div>\r\n    );\r\n}","import {FormControl, InputGroup, Button, DropdownButton, Dropdown} from \"react-bootstrap\";\r\nimport React, {useState} from \"react\";\r\nimport './App.css';\r\nimport firebase from \"firebase\";\r\nimport {NavLink, useHistory} from \"react-router-dom\";\r\n\r\n\r\nexport default function Registration() {\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [firstPw, setFirstPw] = useState('')\r\n    const [errorMessage, setErrorMessage] = useState(\"\")\r\n    const [dropdownValue, setDropdownValue] = useState('')\r\n    const [isAlreadyUsed, setIsAlreadyUsed] = useState(false)\r\n\r\n    let formOfAdress = [{value: \"Mr. \"}, {value: \"Ms. \"}, {value: \"Mrs. \"}]\r\n\r\n    const history = useHistory();\r\n\r\n    function storeUser() {\r\n        firebase.database().ref('usernames/' + username + '/security/password').set(password)\r\n        firebase.database().ref('usernames/' + username + '/security/formOfAdress').set(dropdownValue)\r\n    }\r\n\r\n    /*function isUserAlreadyUsed() {\r\n        // on() method\r\n        firebase.database().ref('usernames/' + username).on('value', (snap) => {\r\n            if (!snap.val().length > 0) {\r\n                console.log(snap.val())\r\n                setIsAlreadyUsed(true)\r\n\r\n            }\r\n        });*/\r\n  //  }\r\n\r\n    function validate() {\r\n        //isUserAlreadyUsed()\r\n        //if (!isAlreadyUsed) {\r\n            if (firstPw === password) {\r\n                if (username.length > 1) {\r\n                    storeUser()\r\n                    console.log(username)\r\n                    history.push(\"/login\")\r\n                } else {\r\n                    setErrorMessage(\"Username too short\")\r\n                }\r\n            } else {\r\n                setErrorMessage(\"Passwords do not match\")\r\n            }\r\n        //} //else {\r\n            //setErrorMessage(\"User is already in use\")\r\n        //}\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Semeru</h1><br/>\r\n            <h2>Registration</h2>\r\n            <br/>\r\n\r\n            <Dropdown>\r\n                <Dropdown.Toggle variant=\"primary\" id=\"dropdown-basic\"\r\n                                 style={{background: \"#526b4d\", border: \"#526b4d\"}}>\r\n                    Form of Adress\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                    {formOfAdress.map((adress, index) => <Dropdown.Item\r\n                        key={index} onClick={() => setDropdownValue(adress.value)}>{adress.value}</Dropdown.Item>)}\r\n                </Dropdown.Menu>\r\n            </Dropdown>\r\n\r\n            <br/>\r\n\r\n            <div className={\"d-flex\"} id={\"inputDiv\"}>\r\n                <InputGroup className={\"form-group w-25\"}>\r\n                    <FormControl\r\n                        aria-label=\"Default\"\r\n                        placeholder=\"Username\"\r\n                        value={username}\r\n                        onChange={e => setUsername(e.target.value)}>\r\n\r\n                    </FormControl>\r\n                </InputGroup>\r\n            </div>\r\n\r\n            <br/>\r\n\r\n            <div className={\"d-flex\"} id={\"inputDiv\"}>\r\n                <InputGroup className={\"form-group w-25\"}>\r\n                    <FormControl\r\n                        aria-label=\"Default\" type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        value={firstPw}\r\n                        onChange={e => setFirstPw(e.target.value)}\r\n                    >\r\n                    </FormControl>\r\n                </InputGroup>\r\n            </div>\r\n\r\n            <br/>\r\n\r\n            <div className={\"d-flex\"} id={\"inputDiv\"}>\r\n                <InputGroup className={\"form-group w-25\"}>\r\n                    <FormControl\r\n                        aria-label=\"Default\" type=\"password\"\r\n                        placeholder=\"Confirm Password\"\r\n                        value={password}\r\n                        onChange={e => setPassword(e.target.value)}>\r\n                    </FormControl>\r\n                </InputGroup>\r\n            </div>\r\n            <h6 id={\"errormessage\"}>{errorMessage}</h6>\r\n            <br/>\r\n            <Button style={{background: \"#526b4d\", border: \"#526b4d\"}} onClick={() => validate()}>Sign Up</Button>\r\n            <h6>Already have an account? <NavLink className={\"normalLink\"} to=\"/login\">Sign in</NavLink></h6>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n","import './App.css';\nimport React from \"react\";\nimport {Switch, Route, Redirect, HashRouter} from \"react-router-dom\";\nimport Main from './Main.js'\nimport Login from './Login.js'\nimport Registration from './Registration.js'\nimport firebase from 'firebase'\n\n\n// todo laufende task gelöscht\n// todo account security\n\nexport default function App() {\n\n\n    return (\n        <div>\n            <HashRouter>\n                <Switch>\n                    <Route path={'/login'} component={Login} basename={process.env.PUBLIC_URL}/>\n                    <Route path={'/registration'} component={Registration} basename={process.env.PUBLIC_URL}/>\n                    <Route path={'/semeru'} component={Main} basename={process.env.PUBLIC_URL}/>\n                    <Route path={'/'} basename={process.env.PUBLIC_URL}>\n                        <Redirect to=\"/login\"/>\n                    </Route>\n\n                </Switch>\n            </HashRouter>\n        </div>\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport Login from \"./Login\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {BrowserRouter} from 'react-router-dom';\nimport App from \"./App\";\nimport firebase from \"firebase\";\n\n// Initialize Firebase\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBbzX_9Vp3RqNkR7Ky8Z42HNTIj07VKWGA\",\n    authDomain: \"semeru-7eac8.firebaseapp.com\",\n    databaseURL: \"https://semeru-7eac8-default-rtdb.firebaseio.com\",\n    projectId: \"semeru-7eac8\",\n    storageBucket: \"semeru-7eac8.appspot.com\",\n    messagingSenderId: \"652725791499\",\n    appId: \"1:652725791499:web:2ab8295068db2719df100e\",\n    measurementId: \"G-7BD6XZ6BY1\"\n};\nfirebase.initializeApp(firebaseConfig);\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}