{"version":3,"sources":["reportWebVitals.js","Main.js","Login.js","Registration.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ToDoListe","useState","localStorage","getItem","user","entrys","setEntrys","name","start","stop","newEntry","setNewEntry","stopIndex","setStopIndex","setShowSpinner","stopButtonValue","setStopButtonValue","pauseButtonValue","setPauseButtonValue","interruptButtonValue","setInterruptButtonValue","stopWatchValue","setStopWatchValue","seconds","setSeconds","minutes","setMinutes","hours","setHours","stopTime","getCurrentTime","storeEntry","pauseTime","today","Date","getHours","String","getMinutes","padStart","firebase","database","ref","set","Logout","className","to","style","color","border","Stopwatch","onChange","onCallback","console","log","autoStart","render","formatted","Settings","Button","background","onClick","disabled","BetterTable","scope","length","map","entry","index","startTime","newArray","filter","idx","deleteEntry","Like","useEffect","on","snap","val","getWelcomeMessage","id","InputGroup","FormControl","value","e","old","target","push","Login","username","setUsername","password","setPassword","pwFromDatabase","setPwFromDatabase","errorMessage","setErrorMessage","history","useHistory","onLogin","setItem","placeholder","type","Registration","firstPw","setFirstPw","validate","Dropdown","Toggle","variant","Menu","Item","App","path","component","basename","process","Main","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.518e6ea2.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './App.css';\r\nimport firebase from 'firebase';\r\nimport React, {useEffect, useState} from \"react\";\r\nimport ReactStopwatch from 'react-stopwatch';\r\nimport {Button, FormControl, InputGroup, Spinner} from \"react-bootstrap\";\r\nimport {DoorClosedFill, DoorOpen, DoorOpenFill, Square} from \"react-bootstrap-icons\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport default function ToDoListe() {\r\n    const [user, setUser] = useState(localStorage.getItem('username'))\r\n    let [entrys, setEntrys] = useState([])\r\n    const [newEntry, setNewEntry] = useState({name: '', start: '', stop: ''})\r\n    const [message, setMessage] = useState('')\r\n    const [stopIndex, setStopIndex] = useState(0)\r\n    const [showSpinner, setShowSpinner] = useState(false)\r\n    const [stopButtonValue, setStopButtonValue] = useState(true);\r\n    const [pauseButtonValue, setPauseButtonValue] = useState(true);\r\n    const [interruptButtonValue, setInterruptButtonValue] = useState(true);\r\n    const [stopWatchValue, setStopWatchValue] = useState(false);\r\n    const [seconds, setSeconds] = useState(0)\r\n    const [minutes, setMinutes] = useState(0)\r\n    const [hours, setHours] = useState(0)\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        loadContent()\r\n    }, [])\r\n\r\n    function saveEntry() {\r\n\r\n        // newEntry.start = getCurrentTime()\r\n        entrys.push(newEntry)\r\n        storeEntry(user)\r\n    }\r\n\r\n    function startTime(index) {\r\n        setStopWatchValue(true)\r\n        setStopButtonValue(false)\r\n        setPauseButtonValue(false)\r\n        setInterruptButtonValue(false)\r\n        setStopIndex(index)\r\n        entrys[index].start = getCurrentTime()\r\n        storeEntry(user)\r\n    }\r\n\r\n    function stopTime() {\r\n        resetValues()\r\n        entrys[stopIndex].stop = getCurrentTime()\r\n        storeEntry(user)\r\n    }\r\n\r\n    function resetValues(){\r\n        setSeconds(0)\r\n        setMinutes(0)\r\n        setHours(0)\r\n        setStopWatchValue(false)\r\n        setStopButtonValue(true)\r\n        setPauseButtonValue(true)\r\n        setInterruptButtonValue(true)\r\n    }\r\n\r\n    function interruptTime(){\r\n\r\n    }\r\n\r\n    function pauseTime(){\r\n        if(stopWatchValue === false){\r\n            setStopWatchValue(true)\r\n        }else{\r\n            setStopWatchValue(false)\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    function getCurrentTime() {\r\n        let today = new Date()\r\n        return today.getHours() + ':' + String(today.getMinutes()).padStart(2, \"0\")\r\n    }\r\n\r\n    function getWelcomeMessage() {\r\n        let hours = new Date().getHours()\r\n\r\n        if (hours >= 0 && hours < 12) {\r\n            return \"Good Morning, \"\r\n        } else if (hours >= 12 && hours < 18) {\r\n            return \"Good Afternoon, \"\r\n        } else if (hours >= 18 && hours < 0) {\r\n            return \"Good Evening, \"\r\n        }\r\n    }\r\n\r\n    function storeEntry(user) {\r\n        if (user != null) {\r\n            firebase.database().ref('usernames/' + user + '/entries').set(entrys);\r\n        }\r\n    }\r\n\r\n    function loadContent() {\r\n        console.log(\"loading..\")\r\n        let newArray = []\r\n        setEntrys(newArray)\r\n        setShowSpinner(true)\r\n        readEntrys()\r\n    }\r\n\r\n    function readEntrys() {\r\n        // on() method\r\n        firebase.database().ref('usernames/' + user + '/entries').on('value', (snap) => {\r\n            if (snap.val()) {\r\n                console.log(\"snap.val()\", snap.val())\r\n                setEntrys(snap.val())\r\n            }\r\n            setShowSpinner(false)\r\n        });\r\n    }\r\n\r\n    function deleteEntry(index) {\r\n        let newArray = entrys.filter((entry, idx) => idx !== index);\r\n        setEntrys(newArray);\r\n\r\n        if (user != null) {\r\n            firebase.database().ref('usernames/' + user + '/entries').set(newArray);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    function deleteAll() {\r\n        let newArray = []\r\n        setEntrys(newArray)\r\n\r\n        if (user != null) {\r\n            firebase.database().ref('usernames/' + user + '/entries').set(newArray);\r\n        }\r\n    }\r\n\r\n    function Logout() {\r\n        return (\r\n            <div>\r\n                <h4 className=\"logout\">S E M E R U<NavLink className={\"logoutButton\"}\r\n                    to=\"/login\"><DoorClosedFill style={{color:\"#526b4d\", border:\"#526b4d\"}}></DoorClosedFill></NavLink></h4>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    function Stopwatch(){\r\n        return(\r\n            <ReactStopwatch\r\n                seconds={seconds}\r\n                minutes={minutes}\r\n                hours={hours}\r\n                onChange={({hours, minutes, seconds}) =>{\r\n                    setSeconds(seconds)\r\n                    setMinutes(minutes)\r\n                    setHours(hours)\r\n                }\r\n                }\r\n                onCallback={() => console.log('Finish')}\r\n                autoStart={stopWatchValue}\r\n                render={({ formatted}) => {\r\n                    return (\r\n                        <div>\r\n                            <p>\r\n                                { formatted }\r\n                            </p>\r\n                        </div>\r\n                    );\r\n                }}\r\n            />\r\n        )\r\n    }\r\n\r\n    function Settings() {\r\n        return (\r\n            <div className=\"settingsComponent\">\r\n                <br/>\r\n                <h4 className={\"setting\"}>S E T T I N G S</h4>\r\n                <br/>\r\n                <h3  className={\"stopwatch\"}><Stopwatch></Stopwatch></h3>\r\n                <br/>\r\n                <Button style={{background:\"#526b4d\", border:\"#526b4d\"}} onClick={pauseTime} disabled={pauseButtonValue}>Pause/Resume</Button>&emsp;\r\n                <Button style={{background:\"#526b4d\", border:\"#526b4d\"}} onClick={stopTime} disabled={stopButtonValue}>Stop</Button>&emsp;\r\n                <Button style={{background:\"#526b4d\", border:\"#526b4d\"}} disabled={interruptButtonValue}>Interrupt</Button>\r\n                <br/>\r\n                <br/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    function BetterTable() {\r\n        return (\r\n            <table className=\"table\">\r\n                <thead>\r\n                <tr>\r\n                    <th scope=\"col\">Name</th>\r\n                    <th scope=\"col\">Startzeit</th>\r\n                    <th scope=\"col\">Endzeit</th>\r\n                    <th scope=\"col\">Starten / Neustarten</th>\r\n                    <th scope=\"col\">Löschen</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {entrys.length === 0 ? <div></div> : entrys.map((entry, index) =>\r\n                    <tr key={index}>\r\n                        <td>{entry.name}</td>\r\n                        <td>{entry.start}</td>\r\n                        <td>{entry.stop}</td>\r\n                        <td>\r\n                            <Button style={{background:\"#526b4d\", border:\"#526b4d\"}} onClick={() => startTime(index)}>Starten</Button>\r\n                        </td>\r\n                        <td>\r\n                            <div onClick={() => deleteEntry(index)}>\r\n                                <Like/>\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                )}\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            <Logout/>\r\n            <h1>{getWelcomeMessage()} {user}\r\n            <br/>\r\n            </h1>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n\r\n\r\n            <h2>Entry's</h2>\r\n\r\n            <h5>Neues To Do:</h5>\r\n            <div className={\"d-flex\"} id={\"inputDiv\"}>\r\n                <InputGroup className=\"form-group w-25\">\r\n                    <FormControl\r\n                        aria-label=\"Default\"\r\n                        aria-describedby=\"inputGroup-sizing-default\"\r\n                        value={newEntry.name}\r\n                        onChange={e => setNewEntry(old => ({...old, name: e.target.value}))}\r\n                    />\r\n                </InputGroup>\r\n            </div>\r\n\r\n            <br/>\r\n            <br/>\r\n            <Button  style={{background:\"#526b4d\", border:\"#526b4d\"}} onClick={saveEntry}>Speichern</Button>\r\n            <br/>\r\n            <BetterTable/>\r\n            <br/>\r\n            <Button  style={{background:\"#526b4d\", border:\"#526b4d\"}} onClick={deleteAll}>Alle löschen</Button>\r\n            <br/>\r\n            <br/>\r\n\r\n            <Settings></Settings>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nfunction Like() {\r\n    return (<Square/>)\r\n}\r\n","import {FormControl, InputGroup, Button} from \"react-bootstrap\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport './App.css';\r\nimport firebase from \"firebase\";\r\nimport {NavLink, useHistory} from \"react-router-dom\";\r\nimport Main from \"./Main\";\r\n\r\n\r\nexport default function Login() {\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [pwFromDatabase, setPwFromDatabase] = useState('')\r\n    const [errorMessage, setErrorMessage] = useState(\"\")\r\n\r\n    const history = useHistory();\r\n\r\n    function onLogin() {\r\n        findPassword()\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(password !== '' || pwFromDatabase !== '') {\r\n            if (password === pwFromDatabase) {\r\n                console.log(\"login successful\")\r\n                localStorage.setItem('username', username);\r\n                history.push(\"/semeru\")\r\n                setErrorMessage(\"\")\r\n\r\n            } else {\r\n                setErrorMessage(\"Incorrect password\")\r\n\r\n            }\r\n        }\r\n    }, [pwFromDatabase])\r\n\r\n    function findPassword() {\r\n        // on() method\r\n        firebase.database().ref('usernames/' + username + '/security').on('value', (snap) => {\r\n            if (snap.val()) {\r\n                console.log(\"snap.val()\", snap.val())\r\n                setPwFromDatabase(snap.val().password)\r\n\r\n\r\n            } else {\r\n                setErrorMessage(\"Incorrect Username\")\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Semeru</h1><br/>\r\n            <h2>Login</h2>\r\n            <div className={\"d-flex\"} id={\"inputDiv\"}>\r\n                <InputGroup className={\"form-group w-25\"}>\r\n                    <FormControl\r\n                        aria-label=\"Default\"\r\n                        placeholder=\"Username\"\r\n                        value={username}\r\n                        onChange={e => setUsername(e.target.value)}>\r\n                    </FormControl>\r\n                </InputGroup>\r\n            </div>\r\n            <br/>\r\n            <div className={\"d-flex\"} id={\"inputDiv\"}>\r\n                <InputGroup className={\"form-group w-25\"}>\r\n                    <FormControl\r\n                        aria-label=\"Default\"\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        value={password}\r\n                        onChange={e => setPassword(e.target.value)}>\r\n                    </FormControl>\r\n                </InputGroup>\r\n            </div>\r\n            <h6 id={\"errormessage\"}>{errorMessage}</h6>\r\n            <br/>\r\n            <Button onClick={() => onLogin()}>Login</Button>\r\n            <br/>\r\n            <h6>Don't have an account yet? <NavLink className={\"normalLink\"} to=\"/registration\">Register</NavLink></h6>\r\n        </div>\r\n    );\r\n}","import {FormControl, InputGroup, Button, DropdownButton, Dropdown} from \"react-bootstrap\";\r\nimport React, {useState} from \"react\";\r\nimport './App.css';\r\nimport firebase from \"firebase\";\r\nimport {NavLink, useHistory} from \"react-router-dom\";\r\n\r\n\r\nexport default function Registration() {\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [firstPw, setFirstPw] = useState('')\r\n    const [errorMessage, setErrorMessage] = useState(\"\")\r\n\r\n\r\n    const history = useHistory();\r\n\r\n    function storeUser() {\r\n        firebase.database().ref('usernames/' + username + '/security/password').set(password)\r\n    }\r\n\r\n    function validate() {\r\n        if (firstPw === password) {\r\n            if(username.length > 1){\r\n                storeUser()\r\n                console.log(username)\r\n                history.push(\"/login\")\r\n            }else {\r\n                setErrorMessage(\"Username too short\")\r\n            }\r\n        } else {\r\n            setErrorMessage(\"Passwords do not match\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Semeru</h1><br/>\r\n            <h2>Registration</h2>\r\n            <br/>\r\n\r\n            <Dropdown>\r\n                <Dropdown.Toggle variant=\"primary\" id=\"dropdown-basic\">\r\n                    Form of Address\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                    <Dropdown.Item >Mr.</Dropdown.Item>\r\n                    <Dropdown.Item >Ms.</Dropdown.Item>\r\n                    <Dropdown.Item >Mrs.</Dropdown.Item>\r\n                </Dropdown.Menu>\r\n            </Dropdown>\r\n\r\n            <br/>\r\n\r\n            <div className={\"d-flex\"} id={\"inputDiv\"}>\r\n                <InputGroup className={\"form-group w-25\"}>\r\n                    <FormControl\r\n                        aria-label=\"Default\"\r\n                        placeholder=\"Username\"\r\n                        value={username}\r\n                        onChange={e => setUsername(e.target.value)}>\r\n\r\n                    </FormControl>\r\n                </InputGroup>\r\n            </div>\r\n\r\n            <br/>\r\n\r\n            <div className={\"d-flex\"} id={\"inputDiv\"}>\r\n                <InputGroup className={\"form-group w-25\"}>\r\n                    <FormControl\r\n                        aria-label=\"Default\" type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        value={firstPw}\r\n                        onChange={e => setFirstPw(e.target.value)}\r\n                    >\r\n                    </FormControl>\r\n                </InputGroup>\r\n            </div>\r\n\r\n            <br/>\r\n\r\n            <div className={\"d-flex\"} id={\"inputDiv\"}>\r\n                <InputGroup className={\"form-group w-25\"}>\r\n                    <FormControl\r\n                        aria-label=\"Default\" type=\"password\"\r\n                        placeholder=\"Confirm Password\"\r\n                        value={password}\r\n                        onChange={e => setPassword(e.target.value)}>\r\n                    </FormControl>\r\n                </InputGroup>\r\n            </div>\r\n            <h6 id={\"errormessage\"}>{errorMessage}</h6>\r\n            <br/>\r\n            <Button onClick={() => validate()}>Sign Up</Button>\r\n            <h6>Already have an account? <NavLink  className={\"normalLink\"} to=\"/login\">Sign in</NavLink></h6>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n","import './App.css';\nimport React from \"react\";\nimport {Switch, Route, Redirect, HashRouter} from \"react-router-dom\";\nimport Main from './Main.js'\nimport Login from './Login.js'\nimport Registration from './Registration.js'\nimport firebase from 'firebase'\n\n\nexport default function App() {\n\n\n    return (\n        <div>\n            <HashRouter>\n                <Switch>\n                    <Route path={'/login'} component={Login} basename={process.env.PUBLIC_URL}/>\n                    <Route path={'/registration'} component={Registration} basename={process.env.PUBLIC_URL}/>\n                    <Route path={'/semeru'} component={Main} basename={process.env.PUBLIC_URL}/>\n                    <Route path={'/'} basename={process.env.PUBLIC_URL}>\n                        <Redirect to=\"/login\"/>\n                    </Route>\n\n                </Switch>\n            </HashRouter>\n        </div>\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport Login from \"./Login\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {BrowserRouter} from 'react-router-dom';\nimport App from \"./App\";\nimport firebase from \"firebase\";\n\n// Initialize Firebase\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBbzX_9Vp3RqNkR7Ky8Z42HNTIj07VKWGA\",\n    authDomain: \"semeru-7eac8.firebaseapp.com\",\n    databaseURL: \"https://semeru-7eac8-default-rtdb.firebaseio.com\",\n    projectId: \"semeru-7eac8\",\n    storageBucket: \"semeru-7eac8.appspot.com\",\n    messagingSenderId: \"652725791499\",\n    appId: \"1:652725791499:web:2ab8295068db2719df100e\",\n    measurementId: \"G-7BD6XZ6BY1\"\n};\nfirebase.initializeApp(firebaseConfig);\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}